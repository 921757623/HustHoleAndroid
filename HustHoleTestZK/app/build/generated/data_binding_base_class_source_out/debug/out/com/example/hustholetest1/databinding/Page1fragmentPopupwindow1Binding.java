// Generated by view binder compiler. Do not edit!
package com.example.hustholetest1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.hustholetest1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class Page1fragmentPopupwindow1Binding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView button10;

  @NonNull
  public final Button button5;

  @NonNull
  public final Button button7;

  @NonNull
  public final Button button8;

  @NonNull
  public final TextView button9;

  private Page1fragmentPopupwindow1Binding(@NonNull LinearLayout rootView,
      @NonNull TextView button10, @NonNull Button button5, @NonNull Button button7,
      @NonNull Button button8, @NonNull TextView button9) {
    this.rootView = rootView;
    this.button10 = button10;
    this.button5 = button5;
    this.button7 = button7;
    this.button8 = button8;
    this.button9 = button9;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static Page1fragmentPopupwindow1Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static Page1fragmentPopupwindow1Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.page1fragment_popupwindow1, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static Page1fragmentPopupwindow1Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button10;
      TextView button10 = rootView.findViewById(id);
      if (button10 == null) {
        break missingId;
      }

      id = R.id.button5;
      Button button5 = rootView.findViewById(id);
      if (button5 == null) {
        break missingId;
      }

      id = R.id.button7;
      Button button7 = rootView.findViewById(id);
      if (button7 == null) {
        break missingId;
      }

      id = R.id.button8;
      Button button8 = rootView.findViewById(id);
      if (button8 == null) {
        break missingId;
      }

      id = R.id.button9;
      TextView button9 = rootView.findViewById(id);
      if (button9 == null) {
        break missingId;
      }

      return new Page1fragmentPopupwindow1Binding((LinearLayout) rootView, button10, button5,
          button7, button8, button9);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
